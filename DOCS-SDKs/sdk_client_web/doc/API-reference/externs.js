AbstractGrid = function() {};
AbstractWidget = function() {};
AlertAppender = function() {};
BufferAppender = function() {};
ChangedFieldCallback = function() {};
Chart = function() {};
ChartLine = function() {};
ChartListener = function() {};
ClientListener = function() {};
ClientMessageListener = function() {};
ConnectionDetails = function() {};
ConnectionOptions = function() {};
ConnectionSharing = function() {};
ConsoleAppender = function() {};
CustomParserFunction = function() {};
DOMAppender = function() {};
DynaGrid = function() {};
DynaGridListener = function() {};
FlashBridge = function() {};
FunctionAppender = function() {};
FunctionLogConsumer = function() {};
Globals = {};
IllegalArgumentException = function() {};
IllegalStateException = function() {};
Inheritance = {};
ItemUpdate = function() {};
ItemUpdateChangedFieldCallback = function() {};
LabelsFormatter = function() {};
LightstreamerClient = function() {};
Logger = function() {};
LoggerProvider = function() {};
LogMessages = function() {};
RemoteAppender = function() {};
SimpleChartListener = function() {};
SimpleLogAppender = function() {};
SimpleLogger = function() {};
SimpleLoggerProvider = function() {};
StaticGrid = function() {};
StaticGridListener = function() {};
StatusWidget = function() {};
Subscription = function() {};
SubscriptionListener = function() {};
VisualUpdate = function() {};
AbstractGrid.prototype.clean = function() {};
AbstractGrid.prototype.extractCommandSecondLevelFieldList = function() {};
AbstractGrid.prototype.extractFieldList = function() {};
AbstractGrid.prototype.forceSubscriptionInterpretation = function() {};
AbstractGrid.prototype.getNodeTypes = function() {};
AbstractGrid.prototype.getSortField = function() {};
AbstractGrid.prototype.getValue = function() {};
AbstractGrid.prototype.isAddOnTop = function() {};
AbstractGrid.prototype.isCommaAsDecimalSeparator = function() {};
AbstractGrid.prototype.isDescendingSort = function() {};
AbstractGrid.prototype.isHtmlInterpretationEnabled = function() {};
AbstractGrid.prototype.isNumericSort = function() {};
AbstractGrid.prototype.onClearSnapshot = function() {};
AbstractGrid.prototype.onCommandSecondLevelItemLostUpdates = function() {};
AbstractGrid.prototype.onCommandSecondLevelSubscriptionError = function() {};
AbstractGrid.prototype.onEndOfSnapshot = function() {};
AbstractGrid.prototype.onItemLostUpdates = function() {};
AbstractGrid.prototype.onItemUpdate = function() {};
AbstractGrid.prototype.onListenEnd = function() {};
AbstractGrid.prototype.onListenStart = function() {};
AbstractGrid.prototype.onSubscription = function() {};
AbstractGrid.prototype.onSubscriptionError = function() {};
AbstractGrid.prototype.onUnsubscription = function() {};
AbstractGrid.prototype.parseHtml = function() {};
AbstractGrid.prototype.removeRow = function() {};
AbstractGrid.prototype.setAddOnTop = function() {};
AbstractGrid.prototype.setAutoCleanBehavior = function() {};
AbstractGrid.prototype.setHtmlInterpretationEnabled = function() {};
AbstractGrid.prototype.setNodeTypes = function() {};
AbstractGrid.prototype.setSort = function() {};
AbstractGrid.prototype.updateRow = function() {};
AbstractWidget.prototype.clean = function() {};
AbstractWidget.prototype.getValue = function() {};
AbstractWidget.prototype.onClearSnapshot = function() {};
AbstractWidget.prototype.onCommandSecondLevelItemLostUpdates = function() {};
AbstractWidget.prototype.onCommandSecondLevelSubscriptionError = function() {};
AbstractWidget.prototype.onEndOfSnapshot = function() {};
AbstractWidget.prototype.onItemLostUpdates = function() {};
AbstractWidget.prototype.onItemUpdate = function() {};
AbstractWidget.prototype.onListenEnd = function() {};
AbstractWidget.prototype.onListenStart = function() {};
AbstractWidget.prototype.onSubscription = function() {};
AbstractWidget.prototype.onSubscriptionError = function() {};
AbstractWidget.prototype.onUnsubscription = function() {};
AbstractWidget.prototype.parseHtml = function() {};
AbstractWidget.prototype.removeRow = function() {};
AbstractWidget.prototype.setAutoCleanBehavior = function() {};
AbstractWidget.prototype.updateRow = function() {};
AlertAppender.prototype.composeLine = function() {};
AlertAppender.prototype.getCategoryFilter = function() {};
AlertAppender.prototype.getLevel = function() {};
AlertAppender.prototype.log = function() {};
AlertAppender.prototype.setCategoryFilter = function() {};
AlertAppender.prototype.setLevel = function() {};
AlertAppender.prototype.setLoggerProvider = function() {};
BufferAppender.prototype.composeLine = function() {};
BufferAppender.prototype.extractLog = function() {};
BufferAppender.prototype.getCategoryFilter = function() {};
BufferAppender.prototype.getLength = function() {};
BufferAppender.prototype.getLevel = function() {};
BufferAppender.prototype.getLog = function() {};
BufferAppender.prototype.log = function() {};
BufferAppender.prototype.reset = function() {};
BufferAppender.prototype.setCategoryFilter = function() {};
BufferAppender.prototype.setLevel = function() {};
BufferAppender.prototype.setLoggerProvider = function() {};
Chart.prototype.addListener = function() {};
Chart.prototype.addYAxis = function() {};
Chart.prototype.clean = function() {};
Chart.prototype.configureArea = function() {};
Chart.prototype.getListeners = function() {};
Chart.prototype.getValue = function() {};
Chart.prototype.onClearSnapshot = function() {};
Chart.prototype.onCommandSecondLevelItemLostUpdates = function() {};
Chart.prototype.onCommandSecondLevelSubscriptionError = function() {};
Chart.prototype.onEndOfSnapshot = function() {};
Chart.prototype.onItemLostUpdates = function() {};
Chart.prototype.onItemUpdate = function() {};
Chart.prototype.onListenEnd = function() {};
Chart.prototype.onListenStart = function() {};
Chart.prototype.onSubscription = function() {};
Chart.prototype.onSubscriptionError = function() {};
Chart.prototype.onUnsubscription = function() {};
Chart.prototype.parseHtml = function() {};
Chart.prototype.positionXAxis = function() {};
Chart.prototype.removeListener = function() {};
Chart.prototype.removeRow = function() {};
Chart.prototype.removeYAxis = function() {};
Chart.prototype.setAutoCleanBehavior = function() {};
Chart.prototype.setXAxis = function() {};
Chart.prototype.setXLabels = function() {};
Chart.prototype.updateRow = function() {};
ChartLine.prototype.getYField = function() {};
ChartLine.prototype.positionYAxis = function() {};
ChartLine.prototype.setStyle = function() {};
ChartLine.prototype.setYLabels = function() {};
ChartListener.prototype.onNewLine = function() {};
ChartListener.prototype.onRemovedLine = function() {};
ChartListener.prototype.onXOverflow = function() {};
ChartListener.prototype.onYOverflow = function() {};
ClientListener.prototype.onListenEnd = function() {};
ClientListener.prototype.onListenStart = function() {};
ClientListener.prototype.onPropertyChange = function() {};
ClientListener.prototype.onServerError = function() {};
ClientListener.prototype.onServerKeepalive = function() {};
ClientListener.prototype.onShareAbort = function() {};
ClientListener.prototype.onStatusChange = function() {};
ClientMessageListener.prototype.onAbort = function() {};
ClientMessageListener.prototype.onDeny = function() {};
ClientMessageListener.prototype.onDiscarded = function() {};
ClientMessageListener.prototype.onError = function() {};
ClientMessageListener.prototype.onProcessed = function() {};
ConnectionDetails.prototype.getAdapterSet = function() {};
ConnectionDetails.prototype.getServerAddress = function() {};
ConnectionDetails.prototype.getServerInstanceAddress = function() {};
ConnectionDetails.prototype.getServerSocketName = function() {};
ConnectionDetails.prototype.getSessionId = function() {};
ConnectionDetails.prototype.getUser = function() {};
ConnectionDetails.prototype.setAdapterSet = function() {};
ConnectionDetails.prototype.setPassword = function() {};
ConnectionDetails.prototype.setServerAddress = function() {};
ConnectionDetails.prototype.setUser = function() {};
ConnectionOptions.prototype.getConnectTimeout = function() {};
ConnectionOptions.prototype.getContentLength = function() {};
ConnectionOptions.prototype.getCurrentConnectTimeout = function() {};
ConnectionOptions.prototype.getFirstRetryMaxDelay = function() {};
ConnectionOptions.prototype.getForcedTransport = function() {};
ConnectionOptions.prototype.getHttpExtraHeaders = function() {};
ConnectionOptions.prototype.getIdleTimeout = function() {};
ConnectionOptions.prototype.getKeepaliveInterval = function() {};
ConnectionOptions.prototype.getMaxBandwidth = function() {};
ConnectionOptions.prototype.getPollingInterval = function() {};
ConnectionOptions.prototype.getReconnectTimeout = function() {};
ConnectionOptions.prototype.getRetryDelay = function() {};
ConnectionOptions.prototype.getReverseHeartbeatInterval = function() {};
ConnectionOptions.prototype.getSessionRecoveryTimeout = function() {};
ConnectionOptions.prototype.getStalledTimeout = function() {};
ConnectionOptions.prototype.isCookieHandlingRequired = function() {};
ConnectionOptions.prototype.isEarlyWSOpenEnabled = function() {};
ConnectionOptions.prototype.isHttpExtraHeadersOnSessionCreationOnly = function() {};
ConnectionOptions.prototype.isServerInstanceAddressIgnored = function() {};
ConnectionOptions.prototype.isSlowingEnabled = function() {};
ConnectionOptions.prototype.setConnectTimeout = function() {};
ConnectionOptions.prototype.setContentLength = function() {};
ConnectionOptions.prototype.setCookieHandlingRequired = function() {};
ConnectionOptions.prototype.setCurrentConnectTimeout = function() {};
ConnectionOptions.prototype.setEarlyWSOpenEnabled = function() {};
ConnectionOptions.prototype.setFirstRetryMaxDelay = function() {};
ConnectionOptions.prototype.setForcedTransport = function() {};
ConnectionOptions.prototype.setHttpExtraHeaders = function() {};
ConnectionOptions.prototype.setHttpExtraHeadersOnSessionCreationOnly = function() {};
ConnectionOptions.prototype.setIdleTimeout = function() {};
ConnectionOptions.prototype.setKeepaliveInterval = function() {};
ConnectionOptions.prototype.setMaxBandwidth = function() {};
ConnectionOptions.prototype.setPollingInterval = function() {};
ConnectionOptions.prototype.setReconnectTimeout = function() {};
ConnectionOptions.prototype.setRetryDelay = function() {};
ConnectionOptions.prototype.setReverseHeartbeatInterval = function() {};
ConnectionOptions.prototype.setServerInstanceAddressIgnored = function() {};
ConnectionOptions.prototype.setSessionRecoveryTimeout = function() {};
ConnectionOptions.prototype.setSlowingEnabled = function() {};
ConnectionOptions.prototype.setStalledTimeout = function() {};
ConnectionSharing.prototype.getShareName = function() {};
ConnectionSharing.prototype.isPossible = function() {};
ConsoleAppender.prototype.composeLine = function() {};
ConsoleAppender.prototype.getCategoryFilter = function() {};
ConsoleAppender.prototype.getLevel = function() {};
ConsoleAppender.prototype.log = function() {};
ConsoleAppender.prototype.setCategoryFilter = function() {};
ConsoleAppender.prototype.setLevel = function() {};
ConsoleAppender.prototype.setLoggerProvider = function() {};
DOMAppender.prototype.composeLine = function() {};
DOMAppender.prototype.getCategoryFilter = function() {};
DOMAppender.prototype.getLevel = function() {};
DOMAppender.prototype.log = function() {};
DOMAppender.prototype.setCategoryFilter = function() {};
DOMAppender.prototype.setLevel = function() {};
DOMAppender.prototype.setLoggerProvider = function() {};
DOMAppender.prototype.setNextOnTop = function() {};
DOMAppender.prototype.setUseInnerHtml = function() {};
DynaGrid.prototype.addListener = function() {};
DynaGrid.prototype.clean = function() {};
DynaGrid.prototype.extractCommandSecondLevelFieldList = function() {};
DynaGrid.prototype.extractFieldList = function() {};
DynaGrid.prototype.forceSubscriptionInterpretation = function() {};
DynaGrid.prototype.getCurrentPages = function() {};
DynaGrid.prototype.getListeners = function() {};
DynaGrid.prototype.getMaxDynaRows = function() {};
DynaGrid.prototype.getNodeTypes = function() {};
DynaGrid.prototype.getSortField = function() {};
DynaGrid.prototype.getValue = function() {};
DynaGrid.prototype.goToPage = function() {};
DynaGrid.prototype.isAddOnTop = function() {};
DynaGrid.prototype.isCommaAsDecimalSeparator = function() {};
DynaGrid.prototype.isDescendingSort = function() {};
DynaGrid.prototype.isHtmlInterpretationEnabled = function() {};
DynaGrid.prototype.isNumericSort = function() {};
DynaGrid.prototype.onClearSnapshot = function() {};
DynaGrid.prototype.onCommandSecondLevelItemLostUpdates = function() {};
DynaGrid.prototype.onCommandSecondLevelSubscriptionError = function() {};
DynaGrid.prototype.onEndOfSnapshot = function() {};
DynaGrid.prototype.onItemLostUpdates = function() {};
DynaGrid.prototype.onItemUpdate = function() {};
DynaGrid.prototype.onListenEnd = function() {};
DynaGrid.prototype.onListenStart = function() {};
DynaGrid.prototype.onSubscription = function() {};
DynaGrid.prototype.onSubscriptionError = function() {};
DynaGrid.prototype.onUnsubscription = function() {};
DynaGrid.prototype.parseHtml = function() {};
DynaGrid.prototype.removeListener = function() {};
DynaGrid.prototype.removeRow = function() {};
DynaGrid.prototype.setAddOnTop = function() {};
DynaGrid.prototype.setAutoCleanBehavior = function() {};
DynaGrid.prototype.setAutoScroll = function() {};
DynaGrid.prototype.setHtmlInterpretationEnabled = function() {};
DynaGrid.prototype.setMaxDynaRows = function() {};
DynaGrid.prototype.setNodeTypes = function() {};
DynaGrid.prototype.setSort = function() {};
DynaGrid.prototype.updateRow = function() {};
DynaGridListener.prototype.onCurrentPagesChanged = function() {};
DynaGridListener.prototype.onVisualUpdate = function() {};
FlashBridge.prototype.getFlashObject = function() {};
FunctionAppender.prototype.composeLine = function() {};
FunctionAppender.prototype.getCategoryFilter = function() {};
FunctionAppender.prototype.getLevel = function() {};
FunctionAppender.prototype.log = function() {};
FunctionAppender.prototype.setCategoryFilter = function() {};
FunctionAppender.prototype.setLevel = function() {};
FunctionAppender.prototype.setLoggerProvider = function() {};
IllegalArgumentException.prototype.message = function() {};
IllegalArgumentException.prototype.name = function() {};
IllegalStateException.prototype.message = function() {};
IllegalStateException.prototype.name = function() {};
Inheritance._callSuperConstructor = function() {};
Inheritance._callSuperMethod = function() {};
Inheritance.Inheritance = function() {};
ItemUpdate.prototype.forEachChangedField = function() {};
ItemUpdate.prototype.forEachField = function() {};
ItemUpdate.prototype.getItemName = function() {};
ItemUpdate.prototype.getItemPos = function() {};
ItemUpdate.prototype.getValue = function() {};
ItemUpdate.prototype.isSnapshot = function() {};
ItemUpdate.prototype.isValueChanged = function() {};
LightstreamerClient.prototype.addListener = function() {};
LightstreamerClient.prototype.connect = function() {};
LightstreamerClient.prototype.connectionDetails = function() {};
LightstreamerClient.prototype.connectionOptions = function() {};
LightstreamerClient.prototype.disconnect = function() {};
LightstreamerClient.prototype.enableSharing = function() {};
LightstreamerClient.prototype.getListeners = function() {};
LightstreamerClient.prototype.getStatus = function() {};
LightstreamerClient.prototype.getSubscriptions = function() {};
LightstreamerClient.prototype.isMaster = function() {};
LightstreamerClient.LIB_NAME = function() {};
LightstreamerClient.LIB_VERSION = function() {};
LightstreamerClient.prototype.removeListener = function() {};
LightstreamerClient.prototype.sendMessage = function() {};
LightstreamerClient.setLoggerProvider = function() {};
LightstreamerClient.prototype.subscribe = function() {};
LightstreamerClient.prototype.unsubscribe = function() {};
LogMessages.getMessage = function() {};
Logger.prototype.debug = function() {};
Logger.prototype.error = function() {};
Logger.prototype.fatal = function() {};
Logger.prototype.info = function() {};
Logger.prototype.isDebugEnabled = function() {};
Logger.prototype.isErrorEnabled = function() {};
Logger.prototype.isFatalEnabled = function() {};
Logger.prototype.isInfoEnabled = function() {};
Logger.prototype.isWarnEnabled = function() {};
Logger.prototype.warn = function() {};
LoggerProvider.prototype.getLogger = function() {};
RemoteAppender.prototype.composeLine = function() {};
RemoteAppender.prototype.extractLog = function() {};
RemoteAppender.prototype.getCategoryFilter = function() {};
RemoteAppender.prototype.getLevel = function() {};
RemoteAppender.prototype.log = function() {};
RemoteAppender.prototype.setCategoryFilter = function() {};
RemoteAppender.prototype.setLevel = function() {};
RemoteAppender.prototype.setLoggerProvider = function() {};
SimpleChartListener.prototype.onListenStart = function() {};
SimpleChartListener.prototype.onNewLine = function() {};
SimpleChartListener.prototype.onRemovedLine = function() {};
SimpleChartListener.prototype.onXOverflow = function() {};
SimpleChartListener.prototype.onYOverflow = function() {};
SimpleLogAppender.prototype.composeLine = function() {};
SimpleLogAppender.prototype.getCategoryFilter = function() {};
SimpleLogAppender.prototype.getLevel = function() {};
SimpleLogAppender.prototype.log = function() {};
SimpleLogAppender.prototype.setCategoryFilter = function() {};
SimpleLogAppender.prototype.setLevel = function() {};
SimpleLogAppender.prototype.setLoggerProvider = function() {};
SimpleLogger.prototype.debug = function() {};
SimpleLogger.prototype.error = function() {};
SimpleLogger.prototype.fatal = function() {};
SimpleLogger.prototype.info = function() {};
SimpleLogger.prototype.isDebugEnabled = function() {};
SimpleLogger.prototype.isErrorEnabled = function() {};
SimpleLogger.prototype.isFatalEnabled = function() {};
SimpleLogger.prototype.isInfoEnabled = function() {};
SimpleLogger.prototype.isWarnEnabled = function() {};
SimpleLogger.prototype.setLevel = function() {};
SimpleLogger.prototype.warn = function() {};
SimpleLoggerProvider.prototype.addLoggerAppender = function() {};
SimpleLoggerProvider.prototype.dispatchLog = function() {};
SimpleLoggerProvider.prototype.getLogger = function() {};
SimpleLoggerProvider.prototype.removeLoggerAppender = function() {};
StaticGrid.prototype.addCell = function() {};
StaticGrid.prototype.addListener = function() {};
StaticGrid.prototype.clean = function() {};
StaticGrid.prototype.extractCommandSecondLevelFieldList = function() {};
StaticGrid.prototype.extractFieldList = function() {};
StaticGrid.prototype.extractItemList = function() {};
StaticGrid.prototype.forceSubscriptionInterpretation = function() {};
StaticGrid.prototype.getListeners = function() {};
StaticGrid.prototype.getNodeTypes = function() {};
StaticGrid.prototype.getSortField = function() {};
StaticGrid.prototype.getValue = function() {};
StaticGrid.prototype.isAddOnTop = function() {};
StaticGrid.prototype.isCommaAsDecimalSeparator = function() {};
StaticGrid.prototype.isDescendingSort = function() {};
StaticGrid.prototype.isHtmlInterpretationEnabled = function() {};
StaticGrid.prototype.isNumericSort = function() {};
StaticGrid.prototype.onClearSnapshot = function() {};
StaticGrid.prototype.onCommandSecondLevelItemLostUpdates = function() {};
StaticGrid.prototype.onCommandSecondLevelSubscriptionError = function() {};
StaticGrid.prototype.onEndOfSnapshot = function() {};
StaticGrid.prototype.onItemLostUpdates = function() {};
StaticGrid.prototype.onItemUpdate = function() {};
StaticGrid.prototype.onListenEnd = function() {};
StaticGrid.prototype.onListenStart = function() {};
StaticGrid.prototype.onSubscription = function() {};
StaticGrid.prototype.onSubscriptionError = function() {};
StaticGrid.prototype.onUnsubscription = function() {};
StaticGrid.prototype.parseHtml = function() {};
StaticGrid.prototype.removeListener = function() {};
StaticGrid.prototype.removeRow = function() {};
StaticGrid.prototype.setAddOnTop = function() {};
StaticGrid.prototype.setAutoCleanBehavior = function() {};
StaticGrid.prototype.setHtmlInterpretationEnabled = function() {};
StaticGrid.prototype.setNodeTypes = function() {};
StaticGrid.prototype.setRootNode = function() {};
StaticGrid.prototype.setSort = function() {};
StaticGrid.prototype.updateRow = function() {};
StaticGridListener.prototype.onVisualUpdate = function() {};
StatusWidget.prototype.getDomNode = function() {};
StatusWidget.prototype.onListenEnd = function() {};
StatusWidget.prototype.onListenStart = function() {};
StatusWidget.prototype.onPropertyChange = function() {};
StatusWidget.prototype.onServerError = function() {};
StatusWidget.prototype.onServerKeepalive = function() {};
StatusWidget.prototype.onShareAbort = function() {};
StatusWidget.prototype.onStatusChange = function() {};
Subscription.prototype.addListener = function() {};
Subscription.prototype.getCommandPosition = function() {};
Subscription.prototype.getCommandSecondLevelDataAdapter = function() {};
Subscription.prototype.getCommandSecondLevelFields = function() {};
Subscription.prototype.getCommandSecondLevelFieldSchema = function() {};
Subscription.prototype.getCommandValue = function() {};
Subscription.prototype.getDataAdapter = function() {};
Subscription.prototype.getFields = function() {};
Subscription.prototype.getFieldSchema = function() {};
Subscription.prototype.getItemGroup = function() {};
Subscription.prototype.getItems = function() {};
Subscription.prototype.getKeyPosition = function() {};
Subscription.prototype.getListeners = function() {};
Subscription.prototype.getMode = function() {};
Subscription.prototype.getRequestedBufferSize = function() {};
Subscription.prototype.getRequestedMaxFrequency = function() {};
Subscription.prototype.getRequestedSnapshot = function() {};
Subscription.prototype.getSelector = function() {};
Subscription.prototype.getValue = function() {};
Subscription.prototype.isActive = function() {};
Subscription.prototype.isSubscribed = function() {};
Subscription.prototype.removeListener = function() {};
Subscription.prototype.setCommandSecondLevelDataAdapter = function() {};
Subscription.prototype.setCommandSecondLevelFields = function() {};
Subscription.prototype.setCommandSecondLevelFieldSchema = function() {};
Subscription.prototype.setDataAdapter = function() {};
Subscription.prototype.setFields = function() {};
Subscription.prototype.setFieldSchema = function() {};
Subscription.prototype.setItemGroup = function() {};
Subscription.prototype.setItems = function() {};
Subscription.prototype.setRequestedBufferSize = function() {};
Subscription.prototype.setRequestedMaxFrequency = function() {};
Subscription.prototype.setRequestedSnapshot = function() {};
Subscription.prototype.setSelector = function() {};
SubscriptionListener.prototype.onClearSnapshot = function() {};
SubscriptionListener.prototype.onCommandSecondLevelItemLostUpdates = function() {};
SubscriptionListener.prototype.onCommandSecondLevelSubscriptionError = function() {};
SubscriptionListener.prototype.onEndOfSnapshot = function() {};
SubscriptionListener.prototype.onItemLostUpdates = function() {};
SubscriptionListener.prototype.onItemUpdate = function() {};
SubscriptionListener.prototype.onListenEnd = function() {};
SubscriptionListener.prototype.onListenStart = function() {};
SubscriptionListener.prototype.onSubscription = function() {};
SubscriptionListener.prototype.onSubscriptionError = function() {};
SubscriptionListener.prototype.onUnsubscription = function() {};
VisualUpdate.prototype.forEachChangedField = function() {};
VisualUpdate.prototype.getCellValue = function() {};
VisualUpdate.prototype.getChangedFieldValue = function() {};
VisualUpdate.prototype.setAttribute = function() {};
VisualUpdate.prototype.setCellAttribute = function() {};
VisualUpdate.prototype.setCellStyle = function() {};
VisualUpdate.prototype.setCellValue = function() {};
VisualUpdate.prototype.setColdToHotTime = function() {};
VisualUpdate.prototype.setHotTime = function() {};
VisualUpdate.prototype.setHotToColdTime = function() {};
VisualUpdate.prototype.setStyle = function() {};
